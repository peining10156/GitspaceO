<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 配置整合mybatis过程 -->
    <!-- 1.配置数据库相关参数properties的属性：+${url} -->
    <!--<bean class="com.o2o.pn.util.EncryptPropertyPlaceholderConfigurer">-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--<value>classpath:jdbc.properties</value>-->
            <!--</list>-->
        <!--</property>-->
        <!--<property name="fileEncoding" value="UTF-8"/>-->
    <!--</bean>-->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
    <!--<context:property-placeholder location="classpath*:*.properties" />-->
    <!--<context:property-placeholder location="classpath:jdbc.properties,classpath:redis.properties"/>-->
    <!--<context:property-placeholder location="classpath:jdbc.properties,classpath:redis.properties" ignore-unresolvable="true"/>-->
    <!--&lt;!&ndash;配置redis相关参数&ndash;&gt;-->
    <!--<context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>-->
    <!--2.配置数据库连接池-->
    <!--mysql主从库配置1-->
    <!--<bean id="abstractDataSource" abstract="true" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--配置连接池属性-->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--配置c3p0连接池的私有属性-->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!--关闭连接后不自动commit-->
        <property name="autoCommitOnClose" value="false"/>
        <!--获取连接超时时间-->
        <property name="checkoutTimeout" value="10000"/>
        <!--获取连接失败重试次数-->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>
    <!--mysql主从库配置2-->
    <!--<bean id="master" parent="abstractDataSource">-->
        <!--&lt;!&ndash;配置连接池属性&ndash;&gt;-->
        <!--<property name="driverClass" value="${jdbc.driver}"/>-->
        <!--<property name="jdbcUrl" value="${jdbc.master.url}"/>-->
        <!--<property name="user" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->

    <!--</bean>-->
    <!--<bean id="slave" parent="abstractDataSource">-->
        <!--&lt;!&ndash;配置连接池属性&ndash;&gt;-->
        <!--<property name="driverClass" value="${jdbc.driver}"/>-->
        <!--<property name="jdbcUrl" value="${jdbc.slave.url}"/>-->
        <!--<property name="user" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->


    <!--mysql主从库配置3 配置动态数据源，这儿的targetDataSources就是路由数据源所对应的名称-->
    <!--<bean id = "dynamicDataSource" class="com.o2o.pn.dao.split.DynamicDataSource">-->
    <!--<property name="targetDataSources">-->
        <!--<map>-->
            <!--<entry value-ref="master" key="master"/>-->
            <!--<entry value-ref="slave" key="slave"/>-->
        <!--</map>-->
    <!--</property>-->

    <!--</bean>-->
    <!--<bean id ="dataSource" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">-->
        <!--<property name="targetDataSource">-->
        <!--<ref bean="dynamicDataSource"/>-->
        <!--</property>-->
    <!--</bean>-->

    <!--</bean>-->
    <!--3.配置SqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置MyBaties全局配置文件：mybaties-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--扫描entity包 使用别名 -->
        <property name="typeAliasesPackage" value="com.o2o.pn.entity"/>
        <!--扫描sql配置文件：mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!--4.配置扫描DAO接口包，动态实现dao接口，注入到spring容器中。-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--给出需要扫描的dao接口包-->
        <property name="basePackage" value="com.o2o.pn.dao"/>
    </bean>

</beans>